---
interface Substitution {
  interval: string;
  playerOut: string;
  playerIn: string;
  posicion: string;
}

interface Props {
  title: string;
  substitutions: Substitution[];
}

const { title, substitutions } = Astro.props;

// Agrupar sustituciones por intervalo
const groupedSubstitutions = substitutions.reduce((acc, sub) => {
  const key = sub.interval;
  if (!acc[key]) {
    acc[key] = [];
  }
  acc[key].push(sub);
  return acc;
}, {} as Record<string, Substitution[]>);

// Ordenar los intervalos
const sortedIntervals = Object.keys(groupedSubstitutions).sort((a, b) => parseInt(a) - parseInt(b));
---

<section class="bg-gray-800/50 backdrop-blur-sm rounded-xl shadow-xl overflow-hidden transition-all duration-300 hover:shadow-2xl">
  <div class="p-6 border-b border-gray-700">
    <h2 class="text-xl md:text-2xl font-bold bg-gradient-to-r from-blue-400 to-teal-400 text-transparent bg-clip-text">
      {title}
    </h2>
    <p class="mt-2 text-gray-400 text-sm">
      Los cambios están organizados por minuto de juego y posición
    </p>
  </div>

  <div class="overflow-hidden">
    {sortedIntervals.map((interval) => (
      <div class="border-b border-gray-700/50 last:border-none">
        <div class="px-6 py-4 bg-gray-800/30">
          <div class="flex items-center gap-2">
            <span class="text-lg font-bold text-teal-400">{interval}'</span>
            <span class="text-sm text-gray-400">
              minuto{interval === "1" ? "" : "s"} de juego
            </span>
          </div>
        </div>

        <div class="px-6 py-3">
          {/* Primero mostrar cambios de Delanteros */}
          {groupedSubstitutions[interval].some(sub => sub.posicion === "Delantero") && (
            <div class="mb-4 last:mb-0">
              <h4 class="text-sm font-semibold text-orange-400 mb-2">Cambios en Delantera</h4>
              <div class="space-y-2">
                {groupedSubstitutions[interval]
                  .filter(sub => sub.posicion === "Delantero")
                  .map(sub => (
                    <div class="flex items-center gap-3 bg-gray-700/20 rounded-lg p-3">
                      <div class="flex-1 flex items-center gap-2">
                        <span class="inline-flex items-center px-3 py-1 rounded-full bg-red-500/20 text-red-400 text-sm font-medium">
                          <svg class="w-4 h-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd" />
                          </svg>
                          {sub.playerOut}
                        </span>
                        <svg class="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
                        </svg>
                        <span class="inline-flex items-center px-3 py-1 rounded-full bg-green-500/20 text-green-400 text-sm font-medium">
                          <svg class="w-4 h-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
                          </svg>
                          {sub.playerIn}
                        </span>
                      </div>
                    </div>
                  ))}
              </div>
            </div>
          )}

          {/* Luego mostrar cambios de Defensas */}
          {groupedSubstitutions[interval].some(sub => sub.posicion === "Defensa") && (
            <div class="mb-4 last:mb-0">
              <h4 class="text-sm font-semibold text-blue-400 mb-2">Cambios en Defensa</h4>
              <div class="space-y-2">
                {groupedSubstitutions[interval]
                  .filter(sub => sub.posicion === "Defensa")
                  .map(sub => (
                    <div class="flex items-center gap-3 bg-gray-700/20 rounded-lg p-3">
                      <div class="flex-1 flex items-center gap-2">
                        <span class="inline-flex items-center px-3 py-1 rounded-full bg-red-500/20 text-red-400 text-sm font-medium">
                          <svg class="w-4 h-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd" />
                          </svg>
                          {sub.playerOut}
                        </span>
                        <svg class="w-5 h-5 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
                        </svg>
                        <span class="inline-flex items-center px-3 py-1 rounded-full bg-green-500/20 text-green-400 text-sm font-medium">
                          <svg class="w-4 h-4 mr-1" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd" />
                          </svg>
                          {sub.playerIn}
                        </span>
                      </div>
                    </div>
                  ))}
              </div>
            </div>
          )}
        </div>
      </div>
    ))}
  </div>
</section>